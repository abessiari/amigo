ssh_keys:
     public: /tmp/go-ssh.pub
     private: /tmp/go-ssh

stack:
   vars:
      PROD_MODE: 1
      stage_dir: /home/ubuntu/stage_dir
      amigo_image: geneontology/amigo-base:V1
      apache_proxy_image: geneontology/apache-proxy:v7
      S3_CRED_FILE: /tmp/go-aws-credentials

      S3_BUCKET: REPLACE_ME_APACHE_LOG_BUCKET
      S3_PATH: amigo
      S3_PREFIX: production/REPLACE_ME_WITH_TERRAFORM_WORKSPACE

      # APACHE PROXY WILL ALLOW FOR HTTPS. Recommended for PRODUCTION
      USE_SSL: 1
      S3_SSL_CERTS_LOCATION: s3://REPLACE_ME_CERT_BUCKET/REPLACE_ME_DOMAIN.tar.gz

      # APACHE PROXY USE QOS module. Recommended for PRODUCTION
      USE_QOS: 1
      QS_ClientEventBlockCount: 350
      QS_ClientEventBlockCountSeconds: 300
      QS_ClientEventBlockExcludeIP: "9.9.9.9 8.8.8.8"


      #golr_index_archive_url: http://skyhook.berkeleybop.org/issue-35-neo-test/products/solr/golr-index-contents.tgz
      golr_index_archive_url: http://current.geneontology.org/products/solr/golr-index-contents.tgz

      #golr_timestamp: http://skyhook.berkeleybop.org/issue-35-neo-test/products/solr/golr_timestamp.log
      golr_timestamp: http://current.geneontology.org/products/solr/golr_timestamp.log

      release_archive_doi: http://current.geneontology.org/metadata/release-archive-doi.json


      AMIGO_DYNAMIC: REPLACE_ME            # This should be managed by terraform
      AMIGO_DYNAMIC_ALIAS: REPLACE_ME      # This should point to final fqdn
      AMIGO_PUBLIC_GOLR: REPLACE_ME        # This should be managed by terraform
      AMIGO_PUBLIC_GOLR_ALIAS: REPLACE_ME  # This should point to final fqdn
      AMIGO_PUBLIC_GOLR_BULK: REPLACE_ME   # aes-test-golr.geneontology.io

      # Populate with url for go api if desired. 
      GO_API_URL: ""
      USE_CLOUDFLARE: 0
   scripts: [ "stage.yaml", "start_services.yaml" ]
